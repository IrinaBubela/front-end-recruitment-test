@layout('layouts/main')
@set('title', 'Contact')

@section('body')


<div class="container">
  <div class="container-form">
    <form id="signup">
      <div class="personal-info">
        <span class="title">
          <div>1</div>
          Personal information
        </span>
        <div class="form-line" style="display:flex; margin-top: 0">
          <div class="form-group">
            <label class="form-control-label" for="fname">First Name</label>
            <input class="form-control" type="text" id="fname" name="fname" placeholder="Elon">
            <small></small>
          </div>
          <div class="form-group">
            <label class="form-control-label" for="lname">Last Name</label>
            <input class="form-control" type="text" id="lname" name="lname" placeholder="Musk">
            <small></small>
          </div>
        </div>
        <div class="form-line">
          <div class="form-group-line">
            <label class="form-control-label" for="email">Email</label>
            <input class="form-control" type="text" id="email" name="email" placeholder="elon@spacex.com">
            <small></small>
          </div>
        </div>
        <div class="form-line">
          <div class="form-group">
            <label class="form-control-label" for="country">Country</label>
            <input class="form-control" type="text" id="country" name="country" placeholder="United States">
            <small></small>
          </div>
          <div class="form-group">
            <label class="form-control-label" for="pcode">Postal Code</label>
            <input class="form-control" type="number" id="pcode" name="pcode" placeholder="10001">
            <small></small>
          </div>
        </div>
        <div class="form-line">
          <div class="form-group-line">
            <label class="form-control-label" for="phone">Phone Number</label>
            <input class="form-control" type="number" id="phone" name="phone" placeholder="(212) 692-93-92">
            <small></small>
          </div>
        </div>
      </div>

      <div class="personal-info">
        <span class="title">
          <div>2</div>
          Payment Details <img src="/images/padlock.png"></img>
        </span>
        <div class="form-line" style="display:flex; margin-top: 0">
          <div class="form-group-line">
            <label class="form-control-label" for="card-number">Credit Card Number</label>
            <input class="form-control" type="text" id="card-number" name="card-number" placeholder="0000 - 0000 - 0000 - 0000">
            <img class="visa-img" src="/images/visa.svg"></img>
            <small></small>
          </div>
        </div>
        <div class="form-line" style="display:flex; justify-content: space-between">
          <div class="form-group">
            <label class="form-control-label" for="card-code">Security Code</label>
            <input class="form-control" style="-webkit-text-security: square;" type="password" id="ccv" name="card-code" placeholder="***"  autocomplete="on">
            <small></small>
          </div>
          <div class="form-group">
            <label class="form-control-label" for="exp-date">Expiration Date</label>
            <input class="form-control" type="text" id="exp-date" name="exp-date" placeholder="MM / YY">
            <small></small>
          </div>
        </div>
        <div class="form-line">
          <button class="btn-complete"><img src="/images/shopping-cart.png"></img>Complete Purchase</button>
        </div>
      </div>
    </form>
  </div>
  <div class="container-receipt">
    <div class="card">
      <div class="card-inner">
        <div class="card-section">
          <div class="card-title">Your order</div>
          <div class="card-item">
            <span>Apple Watch sport</span>
            <span>$ 580</span>
          </div>
          <div class="card-item">
            <span>Modern Buckle</span>
            <span>$ 380</span>
          </div>
        </div>
        <div class="card-section">
          <div class="card-item">
            <span>Total Purchases</span>
            <span>$ 960.00</span>
          </div>
          <div class="card-item">
            <span>Estimated tax</span>
            <span>$ 0</span>
          </div>
        </div>
        <div class="card-section">
          <div class="card-item">
            <span>Total</span>
            <span>$ 960</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
const fname = document.querySelector('#fname');
const lname = document.querySelector('#lname');
const emailEl = document.querySelector('#email');
const phone = document.querySelector('#phone');
const pcode = document.querySelector('#pcode');
const creditCardNumber = document.querySelector('#card-number');
const expDate = document.querySelector('#ccv');const ccvNumber = document.querySelector('#exp-date');

const form = document.querySelector('#signup');

form.addEventListener('input', function (e) {
    switch (e.target.id) {
      case 'email':
        checkEmail();
        break;
      case 'fname':
        checkFirstName();
        break;
      case 'lname':
        checkLastName();
        break;
      case 'phone':
        checkPhoneNumber();
        break;
      case 'pcode':
        checkPostalCode();
        break;
      case 'card-number':
        checkCreditCardNumber();
        break;
      case 'ccv':
        checkCCV();
        break;
      case 'exp-date':
        checkExpDate();
        break;
    }
});

const checkEmail = () => {
    let valid = false;
    const email = emailEl.value.trim();
    if (!isRequired(email)) {
        showError(emailEl, 'Email cannot be blank.');
    } else if (!isEmailValid(email)) {
        showError(emailEl, 'Email is not valid.')
    } else {
        showSuccess(emailEl);
        valid = true;
    }
    return valid;
}

const checkFirstName = () => {
    let valid = false;
    const min = 3,
        max = 25;
    const username = fname.value.trim();

    if (!isRequired(username)) {
        showError(fname, 'First cannot be blank.');
    } else if (!isBetween(username.length, min, max)) {
        showError(fname, `First must be between ${min} and ${max} characters.`)
    } else {
        showSuccess(fname);
        valid = true;
    }
    return valid;
}

const checkLastName = () => {
    let valid = false;
    const min = 3,
        max = 25;
    const username = lname.value.trim();

    if (!isRequired(username)) {
        showError(lname, 'Last name cannot be blank.');
    } else if (!isBetween(username.length, min, max)) {
        showError(lname, `Last name must be between ${min} and ${max} characters.`)
    } else {
        showSuccess(lname);
        valid = true;
    }
    return valid;
}

const checkPhoneNumber = () => {
    let valid = false;
    const min = 9,
        max = 9;
    const phoneNumber = phone.value.trim();

    if (!isRequired(phoneNumber)) {
        showError(phone, 'Phone Number cannot be blank.');
    } else if (!isBetween(phoneNumber.length, min, max)) {
        showError(phone, `Phone Number must have ${min} characters.`)
    } else {
        showSuccess(phone);
        valid = true;
    }
    return valid;
}

const checkPostalCode = () => {
    let valid = false;
    const count = 5;
    const postalCode = pcode.value.trim();

    if (!isRequired(postalCode)) {
        showError(pcode, 'Postal Code cannot be blank.');
    } else if (!(postalCode.length == count)) {
        showError(pcode, `Postal Code must have ${count} characters.`)
    } else {
        showSuccess(pcode);
        valid = true;
    }
    return valid;
}

const checkCreditCardNumber = () => {
    let valid = false;
    const count = 16;
    const cardNumber = creditCardNumber.value.trim();

    if (!isRequired(cardNumber)) {
        showError(creditCardNumber, 'Card Number cannot be blank.');
    } else if (!(cardNumber.length == count)) {
        showError(creditCardNumber, `Card Number must have ${count} characters.`)
    } else {
        showSuccess(creditCardNumber);
        valid = true;
    }
    return valid;
}

const checkCCV= () => {
    let valid = false;
    const count = 3;
    const ccv = ccvNumber.value.trim();

    if (!isRequired(ccv)) {
        showError(ccvNumber, 'Security Code cannot be blank.');
    } else if (!(ccv.length == count)) {
        showError(ccvNumber, `Security Code must have ${count} characters.`)
    } else {
        showSuccess(ccvNumber);
        valid = true;
    }
    return valid;
}

const checkExpDate= () => {
    let valid = false;
    const expDateValue = expDate.value.trim();

    if (!isRequired(expDateValue)) {
        showError(expDate, 'Security Code cannot be blank.');
    } else if (!isExpDateValid(expDateValue)) {
        showError(expDate, `Security Code is not valid.`)
    } else {
        showSuccess(expDate);
        valid = true;
    }
    return valid;
}


const isRequired = value => value === '' ? false : true;
const isBetween = (length, min, max) => length < min || length > max ? false : true;

const isEmailValid = (email) => {
    const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email);
};

const isExpDateValid = (expDate) => {
   const re =/^(0[1-9]|1[0-2])\/?([0-9]{4}|[0-9]{2})$/;
    return re.test(expDate);
}

const showError = (input, message) => {
    const formField = input.parentElement;
    formField.classList.remove('success');
    formField.classList.add('error');

    const error = formField.querySelector('small');
    error.textContent = message;
};

const showSuccess = (input) => {
    const formField = input.parentElement;

    formField.classList.remove('error');
    formField.classList.add('success');
    
    const error = formField.querySelector('small');
    error.textContent = '';
}
</script>
@end

